// Service Worker لتحسين الأداء
const CACHE_NAME = 'shahd-senior-v1';
const urlsToCache = [
    '/',
    '/index.html',
    '/fc25.html',
    '/css/style.css',
    '/css/responsive.css',
    '/js/main.js',
    '/js/whatsapp.js',
    '/js/telegram.js',
    '/data/games.json',
    '/images/fc25.jpg'
];

// تثبيت Service Worker
self.addEventListener('install', (event) => {
    event.waitUntil(
        caches.open(CACHE_NAME)
            .then((cache) => {
                console.log('✅ تم فتح الكاش');
                return cache.addAll(urlsToCache);
            })
    );
});

// تفعيل Service Worker
self.addEventListener('activate', (event) => {
    event.waitUntil(
        caches.keys().then((cacheNames) => {
            return Promise.all(
                cacheNames.map((cacheName) => {
                    if (cacheName !== CACHE_NAME) {
                        console.log('🗑️ حذف كاش قديم:', cacheName);
                        return caches.delete(cacheName);
                    }
                })
            );
        })
    );
});

// اعتراض طلبات الشبكة
self.addEventListener('fetch', (event) => {
    event.respondWith(
        caches.match(event.request)
            .then((response) => {
                // إرجاع من الكاش إذا موجود
                if (response) {
                    return response;
                }
                
                // تنفيذ طلب الشبكة
                return fetch(event.request)
                    .then((response) => {
                        // تحقق من صحة الاستجابة
                        if (!response || response.status !== 200 || response.type !== 'basic') {
                            return response;
                        }
                        
                        // نسخ الاستجابة للكاش
                        const responseToCache = response.clone();
                        
                        caches.open(CACHE_NAME)
                            .then((cache) => {
                                cache.put(event.request, responseToCache);
                            });
                        
                        return response;
                    });
            })
            .catch(() => {
                // إرجاع صفحة أوفلاين
                return caches.match('/offline.html');
            })
    );
});

// تحديث الكاش
self.addEventListener('message', (event) => {
    if (event.data.action === 'UPDATE_CACHE') {
        caches.open(CACHE_NAME)
            .then((cache) => {
                cache.addAll(event.data.urls);
            });
    }
});
    
